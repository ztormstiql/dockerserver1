version: "2.4"
services:
  adguard: #check GitHub to resolve port 53 issue: https://github.com/AdguardTeam/AdGuardHome/wiki/Docker => resolved
    container_name: AdGuard
    image: adguard/adguardhome
    volumes:
      - adguard_work:/opt/adguardhome/work
      - adguard_config:/opt/adguardhome/conf
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
      - 68:68/tcp
      - 68:68/udp
      - 80:80/tcp
#       - 443:443
      - 3005:3000/tcp
      - 853:853/tcp
#       - 784:784
#       - 8853:8853
#       - 5443:5443
    restart: always
    environment:
      - TZ=Europe/Amsterdam
  bitwarden:
    container_name: Bitwarden
    image: bitwardenrs/server:latest
    volumes:
      - bitwarden_data:/data
    ports:
      - 1234:80
    restart: always
  chronograf:
    container_name: Chronograf
    image: chronograf:latest
    volumes:
      - chronograf_data:/var/lib/chronograf
    ports:
      - 8888:8888
    restart: always
  grafana:
    container_name: Grafana
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3030:3000
    restart: always
    environment:
      - TZ=Europe/Amsterdam
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    ports:
      - 1201:3000
    volumes:
      - homepage_config:/app/config # Make sure your local config directory exists
      - homepage_images:/app/public/images
      - homepage_icons:/app/public/icons
      - /var/run/docker.sock:/var/run/docker.sock # (optional) For docker integrations
    environment:
      - TZ=Europe/Amsterdam
  influxdb:
    container_name: InfluxDB
    image: influxdb:latest
    volumes:
      - influxdb:/var/lib/influxdb
    ports:
      - 8086:8086
    network_mode: host
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
      - INFLUXDB_UDP_ENABLED=true
      - INFLUXDB_ADMIN_ENABLED=true
  #mqtt:
    #container_name: MQTT
    #image: eclipse-mosquitto:latest
    #volumes:
#      - mqtt_config:/mosquitto/config
#      - mqtt_data:/mosquitto/data
#      - mqtt_log/mosquitto/log
    #ports:
 #     - 1883:1883
   #   -  9001:9001
    #restart: always
  nodered:
    container_name: NodeRed
    image: nodered/node-red:latest
    #devices:
  #    - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - nodered_data:/data
    ports:
      - 1880:1880
    restart: always
    environment:
      - TZ=Europe/Amsterdam
    privileged: true
    group_add:
      - dialout
  unifi_controller:
    container_name: Unifi-Controller
    image: lscr.io/linuxserver/unifi-controller:latest
    volumes:
      - unifi_config:/config
    ports:
      - 8443:8443
      - 3478:3478/udp
      - 10001:10001/udp
      - 8080:8080
      - 1900:1900/udp #optional
      - 8843:8843 #optional
      - 8880:8880 #optional
      - 6789:6789 #optional
      - 5514:5514/udp #optional
    restart: always
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Amsterdam
  volume_sharer:
    container_name: Volume-Sharer
    image: gdiepen/volume-sharer
    volumes:
      - /var/lib/docker/volumes:/docker_volumes
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 139:139
      - 445:445
    network_mode: host
    restart: always
  zwave-js-ui:
    container_name: zwave-js-ui
    image: zwavejs/zwave-js-ui:latest
    restart: always
    tty: true
    stop_signal: SIGINT
    environment:
      - SESSION_SECRET=9291
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      # Uncomment if you want log times and dates to match your timezone instead of UTC
      # Available at https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=Europe/Amsterdam
    devices:
      # Do not use /dev/ttyUSBX serial devices, as those mappings can change over time.
      # Instead, use the /dev/serial/by-id/X serial device for your Z-Wave stick.
      - /dev/ttyACM0:/dev/zwave
    volumes:
      - zwave_config:/usr/src/app/store
   # Or by using local folder
   # - ./store:/usr/src/app/store
    ports:
      - 8091:8091 # port for web interface
      - 3000:3000 # port for Z-Wave JS websocket server
    group_add:
      - dialout
   
volumes:
  adguard_work:
  adguard_config:
  homepage_config:
  homepage_icons:
  homepage_images:
  unifi_config:
  nodered_data:
#   mqtt_config:
#   mqtt_data:
#   mqtt_log:
  influxdb:
  heimdall_config:
  chronograf_data:
  grafana_data:
  bitwarden_data:
  zwave_config:
